version: '3'
services:
  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - '80:80'
    depends_on:
      - api-0
      - api-1
      - api-2
  api-0:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - '8080'
  api-1:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - database
    ports:
      - '8080'
  api-2:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - database
    ports:
      - '8080'
  email:
    build:
      context: ./email
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - 'kafka'
  database:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - db_data:/data/db
  kafka:
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  prometheus:
    build:
      context: ./logging
      dockerfile: Dockerfile
    ports:
      - '9090:9090'
    volumes:
      - .games_prometheus:/etc/prometheus_data
volumes:
  db_data: {}
